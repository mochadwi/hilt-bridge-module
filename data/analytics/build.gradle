import static de.fayard.refreshVersions.core.Versions.versionFor

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    compileSdk Integer.parseInt(versionFor("version.android.compile.sdk"))

    defaultConfig {
        minSdk Integer.parseInt(versionFor("version.android.min.sdk"))
        targetSdk Integer.parseInt(versionFor("version.android.target.sdk"))

        consumerProguardFiles "consumer-rules.pro"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
}

dependencies {
    implementation(project(":domain"))
    implementation("androidx.datastore:datastore-preferences:_")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:_")
    implementation("javax.inject:javax.inject:_")
    implementation(Google.dagger.hilt.android)
    kapt(Google.dagger.hilt.compiler)

    androidTestImplementation(KotlinX.coroutines.debug)
    androidTestImplementation(KotlinX.coroutines.test)
    androidTestImplementation(AndroidX.test.runner)
    androidTestImplementation(AndroidX.test.ext.junit)
    androidTestImplementation(AndroidX.archCore.testing)
}
